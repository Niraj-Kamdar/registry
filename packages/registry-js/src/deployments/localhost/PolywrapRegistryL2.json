{
  "address": "0x98D669278F61BCC6a5c6c36b2F47b749364beA07",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "domainRegistryNode",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "packageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainRegistry",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnershipUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "packageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "major",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "patch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "VersionPublished",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "packageId",
          "type": "bytes32"
        }
      ],
      "name": "getLatestVersionInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "majorVersion",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minorVersion",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "patchVersion",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "versionNodeId",
          "type": "bytes32"
        }
      ],
      "name": "getPackageLocation",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "packageId",
          "type": "bytes32"
        }
      ],
      "name": "getPackageOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownershipUpdater",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "packages",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "domainRegistryNode",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainRegistry",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "packageId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "majorVersion",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minorVersion",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "patchVersion",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "publishVersion",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "versionNodeId",
          "type": "bytes32"
        }
      ],
      "name": "resolveToLeaf",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "domainRegistry",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainRegistryNode",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "domainOwner",
          "type": "address"
        }
      ],
      "name": "updateOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ownershipUpdater",
          "type": "address"
        }
      ],
      "name": "updateOwnershipUpdater",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_versionPublisher",
          "type": "address"
        }
      ],
      "name": "updateVersionPublisher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "versionNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "leaf",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "latestSubVersion",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "created",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionPublisher",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6f291ad443f58f0815017ebb6b4b30e36c721b36554cfed8c35ba79a87bb7b9a",
  "receipt": {
    "to": null,
    "from": "0x72e37d393c70823113a7176aC1F7C579d2C5623E",
    "contractAddress": "0x98D669278F61BCC6a5c6c36b2F47b749364beA07",
    "transactionIndex": 0,
    "gasUsed": "1793577",
    "logsBloom": "0x
    "blockHash": "0x103d8e13382bdfe6ec9fd89006c3fedabd29e9aab1f73c20cd5fdbfc5c1ba508",
    "transactionHash": "0x6f291ad443f58f0815017ebb6b4b30e36c721b36554cfed8c35ba79a87bb7b9a",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 19,
        "transactionHash": "0x6f291ad443f58f0815017ebb6b4b30e36c721b36554cfed8c35ba79a87bb7b9a",
        "address": "0x98D669278F61BCC6a5c6c36b2F47b749364beA07",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000072e37d393c70823113a7176ac1f7c579d2c5623e"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x103d8e13382bdfe6ec9fd89006c3fedabd29e9aab1f73c20cd5fdbfc5c1ba508"
      }
    ],
    "blockNumber": 19,
    "cumulativeGasUsed": "1793577",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "98078b1bbdce0a0c9e30c2c5aed56b25",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"domainRegistryNode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"packageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainRegistry\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"packageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"major\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"patch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"VersionPublished\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"packageId\",\"type\":\"bytes32\"}],\"name\":\"getLatestVersionInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"patchVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"versionNodeId\",\"type\":\"bytes32\"}],\"name\":\"getPackageLocation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"packageId\",\"type\":\"bytes32\"}],\"name\":\"getPackageOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownershipUpdater\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"domainRegistryNode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainRegistry\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"packageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"patchVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"publishVersion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"versionNodeId\",\"type\":\"bytes32\"}],\"name\":\"resolveToLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"domainRegistry\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainRegistryNode\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"domainOwner\",\"type\":\"address\"}],\"name\":\"updateOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownershipUpdater\",\"type\":\"address\"}],\"name\":\"updateOwnershipUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_versionPublisher\",\"type\":\"address\"}],\"name\":\"updateVersionPublisher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"versionNodes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"leaf\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"latestSubVersion\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"created\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPublisher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/versioning/registry/PolywrapRegistry.sol\":\"PolywrapRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\"},\"contracts/versioning/registry/PolywrapRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./VersionResolver.sol\\\";\\n\\ncontract PolywrapRegistry is VersionResolver {}\\n\",\"keccak256\":\"0x7a823ef70dadab0731708514074fa035620d8994b049f40038f96157b5b71d8f\",\"license\":\"MIT\"},\"contracts/versioning/registry/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\nabstract contract Registry is OwnableUpgradeable {\\n  event OwnershipUpdated(\\n    bytes32 indexed domainRegistryNode,\\n    bytes32 packageId,\\n    bytes32 domainRegistry,\\n    address indexed owner\\n  );\\n\\n  event VersionPublished(\\n    bytes32 indexed packageId,\\n    uint256 major,\\n    uint256 minor,\\n    uint256 patch,\\n    string location\\n  );\\n\\n  struct PackageVersion {\\n    bool leaf;\\n    uint256 latestSubVersion;\\n    bool created;\\n    string location; // empty on non-leaf nodes\\n  }\\n\\n  struct PackageInfo {\\n    address owner;\\n    bytes32 domainRegistryNode;\\n    bytes32 domainRegistry;\\n  }\\n\\n  mapping(bytes32 => PackageVersion) public versionNodes;\\n  mapping(bytes32 => PackageInfo) public packages;\\n  address public ownershipUpdater;\\n  address public versionPublisher;\\n\\n  constructor() {\\n    initialize();\\n  }\\n\\n  function initialize() public initializer {\\n    __Ownable_init();\\n  }\\n\\n  function updateOwnershipUpdater(address _ownershipUpdater) public onlyOwner {\\n    ownershipUpdater = _ownershipUpdater;\\n  }\\n\\n  function updateVersionPublisher(address _versionPublisher) public onlyOwner {\\n    versionPublisher = _versionPublisher;\\n  }\\n\\n  function updateOwnership(\\n    bytes32 domainRegistry,\\n    bytes32 domainRegistryNode,\\n    address domainOwner\\n  ) public {\\n    assert(msg.sender == ownershipUpdater);\\n\\n    bytes32 packageId = keccak256(\\n      abi.encodePacked(\\n        keccak256(abi.encodePacked(domainRegistryNode)),\\n        domainRegistry\\n      )\\n    );\\n\\n    packages[packageId] = PackageInfo(\\n      domainOwner,\\n      domainRegistryNode,\\n      domainRegistry\\n    );\\n\\n    emit OwnershipUpdated(\\n      domainRegistryNode,\\n      packageId,\\n      domainRegistry,\\n      domainOwner\\n    );\\n  }\\n\\n  function publishVersion(\\n    bytes32 packageId,\\n    uint256 majorVersion,\\n    uint256 minorVersion,\\n    uint256 patchVersion,\\n    string memory location\\n  ) public returns (bytes32) {\\n    assert(msg.sender == versionPublisher);\\n\\n    bytes32 majorNodeId = keccak256(abi.encodePacked(packageId, majorVersion));\\n    bytes32 minorNodeId = keccak256(\\n      abi.encodePacked(majorNodeId, minorVersion)\\n    );\\n    bytes32 patchNodeId = keccak256(\\n      abi.encodePacked(minorNodeId, patchVersion)\\n    );\\n\\n    PackageVersion storage packageNode = versionNodes[packageId];\\n    PackageVersion storage majorNode = versionNodes[majorNodeId];\\n    PackageVersion storage minorNode = versionNodes[minorNodeId];\\n\\n    if (packageNode.latestSubVersion < majorVersion) {\\n      packageNode.latestSubVersion = majorVersion;\\n    }\\n    packageNode.created = true;\\n\\n    if (majorNode.latestSubVersion < minorVersion) {\\n      majorNode.latestSubVersion = minorVersion;\\n    }\\n    majorNode.created = true;\\n\\n    if (minorNode.latestSubVersion < patchVersion) {\\n      minorNode.latestSubVersion = patchVersion;\\n    }\\n    minorNode.created = true;\\n\\n    require(!versionNodes[patchNodeId].created, \\\"Version is already published\\\");\\n\\n    versionNodes[patchNodeId] = PackageVersion(true, 0, true, location);\\n\\n    emit VersionPublished(\\n      packageId,\\n      majorVersion,\\n      minorVersion,\\n      patchVersion,\\n      location\\n    );\\n\\n    return patchNodeId;\\n  }\\n\\n  function getPackageOwner(bytes32 packageId) public view returns (address) {\\n    return packages[packageId].owner;\\n  }\\n}\\n\",\"keccak256\":\"0x1c57811282ade818ffbe1d4c849ffd6bf9276e57dfe1df52eecbc0a25fd86289\",\"license\":\"MIT\"},\"contracts/versioning/registry/VersionResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./Registry.sol\\\";\\n\\nabstract contract VersionResolver is Registry {\\n  function resolveToLeaf(bytes32 versionNodeId) public view returns (bytes32) {\\n    PackageVersion storage versionNode = versionNodes[versionNodeId];\\n    require(versionNode.created, \\\"Invalid Node\\\");\\n\\n    if (versionNode.leaf) {\\n      return versionNodeId;\\n    }\\n\\n    bytes32 latestNodeId = keccak256(\\n      abi.encodePacked(versionNodeId, versionNode.latestSubVersion)\\n    );\\n\\n    return resolveToLeaf(latestNodeId);\\n  }\\n\\n  function getPackageLocation(bytes32 versionNodeId)\\n    public\\n    view\\n    returns (string memory)\\n  {\\n    bytes32 concreteVersionId = resolveToLeaf(versionNodeId);\\n    return versionNodes[concreteVersionId].location;\\n  }\\n\\n  function getLatestVersionInfo(bytes32 packageId)\\n    public\\n    view\\n    returns (\\n      uint256 majorVersion,\\n      uint256 minorVersion,\\n      uint256 patchVersion,\\n      string memory location\\n    )\\n  {\\n    PackageVersion storage packageNode = versionNodes[packageId];\\n    uint256 majorVersion = packageNode.latestSubVersion;\\n    bytes32 majorNodeId = keccak256(abi.encodePacked(packageId, majorVersion));\\n\\n    PackageVersion storage majorNode = versionNodes[majorNodeId];\\n    uint256 minorVersion = majorNode.latestSubVersion;\\n    bytes32 minorNodeId = keccak256(\\n      abi.encodePacked(majorNodeId, minorVersion)\\n    );\\n\\n    PackageVersion storage minorNode = versionNodes[minorNodeId];\\n    uint256 patchVersion = minorNode.latestSubVersion;\\n    bytes32 patchNodeId = keccak256(\\n      abi.encodePacked(minorNodeId, patchVersion)\\n    );\\n\\n    PackageVersion storage patchNode = versionNodes[patchNodeId];\\n    string memory location = patchNode.location;\\n\\n    return (majorVersion, minorVersion, patchVersion, location);\\n  }\\n}\\n\",\"keccak256\":\"0xb287ee535855a72f4fb9164821d396f5f923cecadfbf4f21ac0a9c5fb4640aea\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b6200056b565b600060019054906101000a900460ff16806200004f575060008054906101000a900460ff16155b62000091576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200008890620004e9565b60405180910390fd5b60008060019054906101000a900460ff161590508015620000e2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620000f26200011760201b60201c565b8015620001145760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806200013e575060008054906101000a900460ff16155b62000180576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017790620004e9565b60405180910390fd5b60008060019054906101000a900460ff161590508015620001d1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620001e16200021660201b60201c565b620001f1620002f560201b60201c565b8015620002135760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806200023d575060008054906101000a900460ff16155b6200027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200027690620004e9565b60405180910390fd5b60008060019054906101000a900460ff161590508015620002d0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620002f25760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806200031c575060008054906101000a900460ff16155b6200035e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200035590620004e9565b60405180910390fd5b60008060019054906101000a900460ff161590508015620003af576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620003cf620003c3620003f460201b60201c565b620003fc60201b60201c565b8015620003f15760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000620004d1602e836200050b565b9150620004de826200051c565b604082019050919050565b600060208201905081810360008301526200050481620004c2565b9050919050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b611e61806200057b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806371102819116100975780638da5cb5b116100665780638da5cb5b146102c7578063c9f006b6146102e5578063ecb1b8d514610301578063f2fde38b1461031f57610100565b80637110281914610251578063715018a61461028357806371fd7f811461028d5780638129fc1c146102bd57610100565b80635ab608e3116100d35780635ab608e3146101b15780635f80affe146101cf57806366b606a51461020257806369317eb71461021e57610100565b8063233a1d9914610105578063427a94d41461013557806347966148146101655780634dc1d99d14610181575b600080fd5b61011f600480360381019061011a9190611625565b61033b565b60405161012c919061198f565b60405180910390f35b61014f600480360381019061014a9190611625565b610408565b60405161015c91906118f1565b60405180910390f35b61017f600480360381019061017a919061164e565b610448565b005b61019b6004803603810190610196919061169d565b610618565b6040516101a8919061198f565b60405180910390f35b6101b961095c565b6040516101c691906118f1565b60405180910390f35b6101e960048036038101906101e49190611625565b610982565b6040516101f99493929190611a95565b60405180910390f35b61021c600480360381019061021791906115fc565b610b36565b005b61023860048036038101906102339190611625565b610bf6565b6040516102489493929190611943565b60405180910390f35b61026b60048036038101906102669190611625565b610cc8565b60405161027a9392919061190c565b60405180910390f35b61028b610d12565b005b6102a760048036038101906102a29190611625565b610d9a565b6040516102b491906119d3565b60405180910390f35b6102c5610e50565b005b6102cf610f31565b6040516102dc91906118f1565b60405180910390f35b6102ff60048036038101906102fa91906115fc565b610f5b565b005b61030961101b565b60405161031691906118f1565b60405180910390f35b610339600480360381019061033491906115fc565b611041565b005b6000806065600084815260200190815260200160002090508060020160009054906101000a900460ff166103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90611a75565b60405180910390fd5b8060000160009054906101000a900460ff16156103c45782915050610403565b60008382600101546040516020016103dd9291906118c5565b6040516020818303038152906040528051906020012090506103fe8161033b565b925050505b919050565b60006066600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000826040516020016104df919061187e565b6040516020818303038152906040528051906020012084604051602001610507929190611899565b60405160208183030381529060405280519060200120905060405180606001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001858152506066600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050508173ffffffffffffffffffffffffffffffffffffffff16837f7f290f38b12a4ba0db0dae399f91016a9fbf6c954370fc1988e92953060d5e51838760405161060a9291906119aa565b60405180910390a350505050565b6000606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069e577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600086866040516020016106b39291906118c5565b604051602081830303815290604052805190602001209050600081866040516020016106e09291906118c5565b6040516020818303038152906040528051906020012090506000818660405160200161070d9291906118c5565b6040516020818303038152906040528051906020012090506000606560008b81526020019081526020016000209050600060656000868152602001908152602001600020905060006065600086815260200190815260200160002090508a83600101541015610780578a83600101819055505b60018360020160006101000a81548160ff02191690831515021790555089826001015410156107b3578982600101819055505b60018260020160006101000a81548160ff02191690831515021790555088816001015410156107e6578881600101819055505b60018160020160006101000a81548160ff0219169083151502179055506065600085815260200190815260200160002060020160009054906101000a900460ff1615610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90611a55565b60405180910390fd5b604051806080016040528060011515815260200160008152602001600115158152602001898152506065600086815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160030190805190602001906109089291906114b2565b509050508b7fa0cf073ede1b5fef0ae41259066849d8f4af26eb95525731a11b3b6cdde968588c8c8c8c6040516109429493929190611a95565b60405180910390a283965050505050505095945050505050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600060606000606560008781526020019081526020016000209050600081600101549050600087826040516020016109be9291906118c5565b604051602081830303815290604052805190602001209050600060656000838152602001908152602001600020905060008160010154905060008382604051602001610a0b9291906118c5565b604051602081830303815290604052805190602001209050600060656000838152602001908152602001600020905060008160010154905060008382604051602001610a589291906118c5565b60405160208183030381529060405280519060200120905060006065600083815260200190815260200160002090506000816003018054610a9890611be7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac490611be7565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b50505050509050898785839e509e509e509e5050505050505050505050509193509193565b610b3e611139565b73ffffffffffffffffffffffffffffffffffffffff16610b5c610f31565b73ffffffffffffffffffffffffffffffffffffffff1614610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba990611a35565b60405180910390fd5b80606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60656020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900460ff1690806003018054610c4590611be7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7190611be7565b8015610cbe5780601f10610c9357610100808354040283529160200191610cbe565b820191906000526020600020905b815481529060010190602001808311610ca157829003601f168201915b5050505050905084565b60666020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b610d1a611139565b73ffffffffffffffffffffffffffffffffffffffff16610d38610f31565b73ffffffffffffffffffffffffffffffffffffffff1614610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590611a35565b60405180910390fd5b610d986000611141565b565b60606000610da78361033b565b9050606560008281526020019081526020016000206003018054610dca90611be7565b80601f0160208091040260200160405190810160405280929190818152602001828054610df690611be7565b8015610e435780601f10610e1857610100808354040283529160200191610e43565b820191906000526020600020905b815481529060010190602001808311610e2657829003601f168201915b5050505050915050919050565b600060019054906101000a900460ff1680610e76575060008054906101000a900460ff16155b610eb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eac90611a15565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f05576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610f0d611207565b8015610f2e5760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f63611139565b73ffffffffffffffffffffffffffffffffffffffff16610f81610f31565b73ffffffffffffffffffffffffffffffffffffffff1614610fd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fce90611a35565b60405180910390fd5b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611049611139565b73ffffffffffffffffffffffffffffffffffffffff16611067610f31565b73ffffffffffffffffffffffffffffffffffffffff16146110bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b490611a35565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561112d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611124906119f5565b60405180910390fd5b61113681611141565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff168061122d575060008054906101000a900460ff16155b61126c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126390611a15565b60405180910390fd5b60008060019054906101000a900460ff1615905080156112bc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6112c46112f0565b6112cc6113c9565b80156112ed5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611316575060008054906101000a900460ff16155b611355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134c90611a15565b60405180910390fd5b60008060019054906101000a900460ff1615905080156113a5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156113c65760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806113ef575060008054906101000a900460ff16155b61142e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142590611a15565b60405180910390fd5b60008060019054906101000a900460ff16159050801561147e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61148e611489611139565b611141565b80156114af5760008060016101000a81548160ff0219169083151502179055505b50565b8280546114be90611be7565b90600052602060002090601f0160209004810192826114e05760008555611527565b82601f106114f957805160ff1916838001178555611527565b82800160010185558215611527579182015b8281111561152657825182559160200191906001019061150b565b5b5090506115349190611538565b5090565b5b80821115611551576000816000905550600101611539565b5090565b600061156861156384611b06565b611ae1565b90508281526020810184848401111561158057600080fd5b61158b848285611ba5565b509392505050565b6000813590506115a281611de6565b92915050565b6000813590506115b781611dfd565b92915050565b600082601f8301126115ce57600080fd5b81356115de848260208601611555565b91505092915050565b6000813590506115f681611e14565b92915050565b60006020828403121561160e57600080fd5b600061161c84828501611593565b91505092915050565b60006020828403121561163757600080fd5b6000611645848285016115a8565b91505092915050565b60008060006060848603121561166357600080fd5b6000611671868287016115a8565b9350506020611682868287016115a8565b925050604061169386828701611593565b9150509250925092565b600080600080600060a086880312156116b557600080fd5b60006116c3888289016115a8565b95505060206116d4888289016115e7565b94505060406116e5888289016115e7565b93505060606116f6888289016115e7565b925050608086013567ffffffffffffffff81111561171357600080fd5b61171f888289016115bd565b9150509295509295909350565b61173581611b53565b82525050565b61174481611b65565b82525050565b61175381611b71565b82525050565b61176a61176582611b71565b611c4a565b82525050565b600061177b82611b37565b6117858185611b42565b9350611795818560208601611bb4565b61179e81611cbc565b840191505092915050565b60006117b6602683611b42565b91506117c182611ccd565b604082019050919050565b60006117d9602e83611b42565b91506117e482611d1c565b604082019050919050565b60006117fc602083611b42565b915061180782611d6b565b602082019050919050565b600061181f601c83611b42565b915061182a82611d94565b602082019050919050565b6000611842600c83611b42565b915061184d82611dbd565b602082019050919050565b61186181611b9b565b82525050565b61187861187382611b9b565b611c54565b82525050565b600061188a8284611759565b60208201915081905092915050565b60006118a58285611759565b6020820191506118b58284611759565b6020820191508190509392505050565b60006118d18285611759565b6020820191506118e18284611867565b6020820191508190509392505050565b6000602082019050611906600083018461172c565b92915050565b6000606082019050611921600083018661172c565b61192e602083018561174a565b61193b604083018461174a565b949350505050565b6000608082019050611958600083018761173b565b6119656020830186611858565b611972604083018561173b565b81810360608301526119848184611770565b905095945050505050565b60006020820190506119a4600083018461174a565b92915050565b60006040820190506119bf600083018561174a565b6119cc602083018461174a565b9392505050565b600060208201905081810360008301526119ed8184611770565b905092915050565b60006020820190508181036000830152611a0e816117a9565b9050919050565b60006020820190508181036000830152611a2e816117cc565b9050919050565b60006020820190508181036000830152611a4e816117ef565b9050919050565b60006020820190508181036000830152611a6e81611812565b9050919050565b60006020820190508181036000830152611a8e81611835565b9050919050565b6000608082019050611aaa6000830187611858565b611ab76020830186611858565b611ac46040830185611858565b8181036060830152611ad68184611770565b905095945050505050565b6000611aeb611afc565b9050611af78282611c19565b919050565b6000604051905090565b600067ffffffffffffffff821115611b2157611b20611c8d565b5b611b2a82611cbc565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611b5e82611b7b565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611bd2578082015181840152602081019050611bb7565b83811115611be1576000848401525b50505050565b60006002820490506001821680611bff57607f821691505b60208210811415611c1357611c12611c5e565b5b50919050565b611c2282611cbc565b810181811067ffffffffffffffff82111715611c4157611c40611c8d565b5b80604052505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f56657273696f6e20697320616c7265616479207075626c697368656400000000600082015250565b7f496e76616c6964204e6f64650000000000000000000000000000000000000000600082015250565b611def81611b53565b8114611dfa57600080fd5b50565b611e0681611b71565b8114611e1157600080fd5b50565b611e1d81611b9b565b8114611e2857600080fd5b5056fea2646970667358221220771597d0bea2b0eab40c2e4f492d6b4e00b015f50a64e9f65fb063297885879e64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806371102819116100975780638da5cb5b116100665780638da5cb5b146102c7578063c9f006b6146102e5578063ecb1b8d514610301578063f2fde38b1461031f57610100565b80637110281914610251578063715018a61461028357806371fd7f811461028d5780638129fc1c146102bd57610100565b80635ab608e3116100d35780635ab608e3146101b15780635f80affe146101cf57806366b606a51461020257806369317eb71461021e57610100565b8063233a1d9914610105578063427a94d41461013557806347966148146101655780634dc1d99d14610181575b600080fd5b61011f600480360381019061011a9190611625565b61033b565b60405161012c919061198f565b60405180910390f35b61014f600480360381019061014a9190611625565b610408565b60405161015c91906118f1565b60405180910390f35b61017f600480360381019061017a919061164e565b610448565b005b61019b6004803603810190610196919061169d565b610618565b6040516101a8919061198f565b60405180910390f35b6101b961095c565b6040516101c691906118f1565b60405180910390f35b6101e960048036038101906101e49190611625565b610982565b6040516101f99493929190611a95565b60405180910390f35b61021c600480360381019061021791906115fc565b610b36565b005b61023860048036038101906102339190611625565b610bf6565b6040516102489493929190611943565b60405180910390f35b61026b60048036038101906102669190611625565b610cc8565b60405161027a9392919061190c565b60405180910390f35b61028b610d12565b005b6102a760048036038101906102a29190611625565b610d9a565b6040516102b491906119d3565b60405180910390f35b6102c5610e50565b005b6102cf610f31565b6040516102dc91906118f1565b60405180910390f35b6102ff60048036038101906102fa91906115fc565b610f5b565b005b61030961101b565b60405161031691906118f1565b60405180910390f35b610339600480360381019061033491906115fc565b611041565b005b6000806065600084815260200190815260200160002090508060020160009054906101000a900460ff166103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90611a75565b60405180910390fd5b8060000160009054906101000a900460ff16156103c45782915050610403565b60008382600101546040516020016103dd9291906118c5565b6040516020818303038152906040528051906020012090506103fe8161033b565b925050505b919050565b60006066600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000826040516020016104df919061187e565b6040516020818303038152906040528051906020012084604051602001610507929190611899565b60405160208183030381529060405280519060200120905060405180606001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001858152506066600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050508173ffffffffffffffffffffffffffffffffffffffff16837f7f290f38b12a4ba0db0dae399f91016a9fbf6c954370fc1988e92953060d5e51838760405161060a9291906119aa565b60405180910390a350505050565b6000606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069e577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600086866040516020016106b39291906118c5565b604051602081830303815290604052805190602001209050600081866040516020016106e09291906118c5565b6040516020818303038152906040528051906020012090506000818660405160200161070d9291906118c5565b6040516020818303038152906040528051906020012090506000606560008b81526020019081526020016000209050600060656000868152602001908152602001600020905060006065600086815260200190815260200160002090508a83600101541015610780578a83600101819055505b60018360020160006101000a81548160ff02191690831515021790555089826001015410156107b3578982600101819055505b60018260020160006101000a81548160ff02191690831515021790555088816001015410156107e6578881600101819055505b60018160020160006101000a81548160ff0219169083151502179055506065600085815260200190815260200160002060020160009054906101000a900460ff1615610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90611a55565b60405180910390fd5b604051806080016040528060011515815260200160008152602001600115158152602001898152506065600086815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160030190805190602001906109089291906114b2565b509050508b7fa0cf073ede1b5fef0ae41259066849d8f4af26eb95525731a11b3b6cdde968588c8c8c8c6040516109429493929190611a95565b60405180910390a283965050505050505095945050505050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600060606000606560008781526020019081526020016000209050600081600101549050600087826040516020016109be9291906118c5565b604051602081830303815290604052805190602001209050600060656000838152602001908152602001600020905060008160010154905060008382604051602001610a0b9291906118c5565b604051602081830303815290604052805190602001209050600060656000838152602001908152602001600020905060008160010154905060008382604051602001610a589291906118c5565b60405160208183030381529060405280519060200120905060006065600083815260200190815260200160002090506000816003018054610a9890611be7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac490611be7565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b50505050509050898785839e509e509e509e5050505050505050505050509193509193565b610b3e611139565b73ffffffffffffffffffffffffffffffffffffffff16610b5c610f31565b73ffffffffffffffffffffffffffffffffffffffff1614610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba990611a35565b60405180910390fd5b80606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60656020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900460ff1690806003018054610c4590611be7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7190611be7565b8015610cbe5780601f10610c9357610100808354040283529160200191610cbe565b820191906000526020600020905b815481529060010190602001808311610ca157829003601f168201915b5050505050905084565b60666020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b610d1a611139565b73ffffffffffffffffffffffffffffffffffffffff16610d38610f31565b73ffffffffffffffffffffffffffffffffffffffff1614610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590611a35565b60405180910390fd5b610d986000611141565b565b60606000610da78361033b565b9050606560008281526020019081526020016000206003018054610dca90611be7565b80601f0160208091040260200160405190810160405280929190818152602001828054610df690611be7565b8015610e435780601f10610e1857610100808354040283529160200191610e43565b820191906000526020600020905b815481529060010190602001808311610e2657829003601f168201915b5050505050915050919050565b600060019054906101000a900460ff1680610e76575060008054906101000a900460ff16155b610eb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eac90611a15565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f05576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610f0d611207565b8015610f2e5760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f63611139565b73ffffffffffffffffffffffffffffffffffffffff16610f81610f31565b73ffffffffffffffffffffffffffffffffffffffff1614610fd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fce90611a35565b60405180910390fd5b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611049611139565b73ffffffffffffffffffffffffffffffffffffffff16611067610f31565b73ffffffffffffffffffffffffffffffffffffffff16146110bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b490611a35565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561112d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611124906119f5565b60405180910390fd5b61113681611141565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff168061122d575060008054906101000a900460ff16155b61126c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126390611a15565b60405180910390fd5b60008060019054906101000a900460ff1615905080156112bc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6112c46112f0565b6112cc6113c9565b80156112ed5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611316575060008054906101000a900460ff16155b611355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134c90611a15565b60405180910390fd5b60008060019054906101000a900460ff1615905080156113a5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156113c65760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806113ef575060008054906101000a900460ff16155b61142e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142590611a15565b60405180910390fd5b60008060019054906101000a900460ff16159050801561147e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61148e611489611139565b611141565b80156114af5760008060016101000a81548160ff0219169083151502179055505b50565b8280546114be90611be7565b90600052602060002090601f0160209004810192826114e05760008555611527565b82601f106114f957805160ff1916838001178555611527565b82800160010185558215611527579182015b8281111561152657825182559160200191906001019061150b565b5b5090506115349190611538565b5090565b5b80821115611551576000816000905550600101611539565b5090565b600061156861156384611b06565b611ae1565b90508281526020810184848401111561158057600080fd5b61158b848285611ba5565b509392505050565b6000813590506115a281611de6565b92915050565b6000813590506115b781611dfd565b92915050565b600082601f8301126115ce57600080fd5b81356115de848260208601611555565b91505092915050565b6000813590506115f681611e14565b92915050565b60006020828403121561160e57600080fd5b600061161c84828501611593565b91505092915050565b60006020828403121561163757600080fd5b6000611645848285016115a8565b91505092915050565b60008060006060848603121561166357600080fd5b6000611671868287016115a8565b9350506020611682868287016115a8565b925050604061169386828701611593565b9150509250925092565b600080600080600060a086880312156116b557600080fd5b60006116c3888289016115a8565b95505060206116d4888289016115e7565b94505060406116e5888289016115e7565b93505060606116f6888289016115e7565b925050608086013567ffffffffffffffff81111561171357600080fd5b61171f888289016115bd565b9150509295509295909350565b61173581611b53565b82525050565b61174481611b65565b82525050565b61175381611b71565b82525050565b61176a61176582611b71565b611c4a565b82525050565b600061177b82611b37565b6117858185611b42565b9350611795818560208601611bb4565b61179e81611cbc565b840191505092915050565b60006117b6602683611b42565b91506117c182611ccd565b604082019050919050565b60006117d9602e83611b42565b91506117e482611d1c565b604082019050919050565b60006117fc602083611b42565b915061180782611d6b565b602082019050919050565b600061181f601c83611b42565b915061182a82611d94565b602082019050919050565b6000611842600c83611b42565b915061184d82611dbd565b602082019050919050565b61186181611b9b565b82525050565b61187861187382611b9b565b611c54565b82525050565b600061188a8284611759565b60208201915081905092915050565b60006118a58285611759565b6020820191506118b58284611759565b6020820191508190509392505050565b60006118d18285611759565b6020820191506118e18284611867565b6020820191508190509392505050565b6000602082019050611906600083018461172c565b92915050565b6000606082019050611921600083018661172c565b61192e602083018561174a565b61193b604083018461174a565b949350505050565b6000608082019050611958600083018761173b565b6119656020830186611858565b611972604083018561173b565b81810360608301526119848184611770565b905095945050505050565b60006020820190506119a4600083018461174a565b92915050565b60006040820190506119bf600083018561174a565b6119cc602083018461174a565b9392505050565b600060208201905081810360008301526119ed8184611770565b905092915050565b60006020820190508181036000830152611a0e816117a9565b9050919050565b60006020820190508181036000830152611a2e816117cc565b9050919050565b60006020820190508181036000830152611a4e816117ef565b9050919050565b60006020820190508181036000830152611a6e81611812565b9050919050565b60006020820190508181036000830152611a8e81611835565b9050919050565b6000608082019050611aaa6000830187611858565b611ab76020830186611858565b611ac46040830185611858565b8181036060830152611ad68184611770565b905095945050505050565b6000611aeb611afc565b9050611af78282611c19565b919050565b6000604051905090565b600067ffffffffffffffff821115611b2157611b20611c8d565b5b611b2a82611cbc565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611b5e82611b7b565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611bd2578082015181840152602081019050611bb7565b83811115611be1576000848401525b50505050565b60006002820490506001821680611bff57607f821691505b60208210811415611c1357611c12611c5e565b5b50919050565b611c2282611cbc565b810181811067ffffffffffffffff82111715611c4157611c40611c8d565b5b80604052505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f56657273696f6e20697320616c7265616479207075626c697368656400000000600082015250565b7f496e76616c6964204e6f64650000000000000000000000000000000000000000600082015250565b611def81611b53565b8114611dfa57600080fd5b50565b611e0681611b71565b8114611e1157600080fd5b50565b611e1d81611b9b565b8114611e2857600080fd5b5056fea2646970667358221220771597d0bea2b0eab40c2e4f492d6b4e00b015f50a64e9f65fb063297885879e64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5319,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5322,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5402,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 5199,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 5312,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10813,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "versionNodes",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_bytes32,t_struct(PackageVersion)10801_storage)"
      },
      {
        "astId": 10818,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "packages",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_bytes32,t_struct(PackageInfo)10808_storage)"
      },
      {
        "astId": 10820,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "ownershipUpdater",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      },
      {
        "astId": 10822,
        "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
        "label": "versionPublisher",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_struct(PackageInfo)10808_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Registry.PackageInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(PackageInfo)10808_storage"
      },
      "t_mapping(t_bytes32,t_struct(PackageVersion)10801_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Registry.PackageVersion)",
        "numberOfBytes": "32",
        "value": "t_struct(PackageVersion)10801_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PackageInfo)10808_storage": {
        "encoding": "inplace",
        "label": "struct Registry.PackageInfo",
        "members": [
          {
            "astId": 10803,
            "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10805,
            "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
            "label": "domainRegistryNode",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 10807,
            "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
            "label": "domainRegistry",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(PackageVersion)10801_storage": {
        "encoding": "inplace",
        "label": "struct Registry.PackageVersion",
        "members": [
          {
            "astId": 10794,
            "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
            "label": "leaf",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 10796,
            "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
            "label": "latestSubVersion",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 10798,
            "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
            "label": "created",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 10800,
            "contract": "contracts/versioning/registry/PolywrapRegistry.sol:PolywrapRegistry",
            "label": "location",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}