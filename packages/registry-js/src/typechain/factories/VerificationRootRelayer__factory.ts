/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VerificationRootRelayer,
  VerificationRootRelayerInterface,
} from "../VerificationRootRelayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_versionVerificationManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blocksPerRootRelay",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "blocksPerRootRelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeLink",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_versionVerificationManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blocksPerRootRelay",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRootRelayBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onVersionVerified",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayVerificationRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blocksPerRootRelay",
        type: "uint256",
      },
    ],
    name: "updateBlocksPerRootRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeLink",
        type: "address",
      },
    ],
    name: "updateBridgeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verificationTreeManager",
        type: "address",
      },
    ],
    name: "updateVerificationTreeManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_versionVerificationManager",
        type: "address",
      },
    ],
    name: "updateVersionVerificationManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verificationTreeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versionVerificationManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c9138038062001c9183398181016040528101906200003791906200052e565b6200004982826200005160201b60201c565b50506200068a565b600060019054906101000a900460ff168062000078575060008054906101000a900460ff16155b620000ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000b19062000596565b60405180910390fd5b60008060019054906101000a900460ff1615905080156200010b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200011b6200018a60201b60201c565b82606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816068819055508015620001855760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff1680620001b1575060008054906101000a900460ff16155b620001f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ea9062000596565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000244576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620002546200028960201b60201c565b620002646200036860201b60201c565b8015620002865760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680620002b0575060008054906101000a900460ff16155b620002f2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e99062000596565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000343576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620003655760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806200038f575060008054906101000a900460ff16155b620003d1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c89062000596565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000422576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600062000434620004f860201b60201c565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015620004f55760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b600081519050620005118162000656565b92915050565b600081519050620005288162000670565b92915050565b600080604083850312156200054257600080fd5b6000620005528582860162000500565b9250506020620005658582860162000517565b9150509250929050565b60006200057e602e83620005b8565b91506200058b8262000607565b604082019050919050565b60006020820190508181036000830152620005b1816200056f565b9050919050565b600082825260208201905092915050565b6000620005d682620005dd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6200066181620005c9565b81146200066d57600080fd5b50565b6200067b81620005fd565b81146200068757600080fd5b50565b6115f7806200069a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637cc4184411610097578063cd6dc68711610066578063cd6dc68714610214578063d75ced3c14610230578063e644e2961461024e578063f2fde38b14610258576100f5565b80637cc418441461019e5780637fec3567146101bc5780638da5cb5b146101da578063b4d5ae90146101f8576100f5565b80634c8d9af1116100d35780634c8d9af11461013c5780635b5516fa1461015a5780636113c1bd14610178578063715018a614610194576100f5565b80630d9f552e146100fa57806312000329146101165780631b08341814610120575b600080fd5b610114600480360381019061010f91906111db565b610274565b005b61011e610334565b005b61013a60048036038101906101359190611269565b61054b565b005b6101446105d1565b6040516101519190611328565b60405180910390f35b6101626105f7565b60405161016f91906113be565b60405180910390f35b610192600480360381019061018d91906111db565b6105fd565b005b61019c6106bd565b005b6101a66107fa565b6040516101b39190611328565b60405180910390f35b6101c4610820565b6040516101d191906113be565b60405180910390f35b6101e2610826565b6040516101ef9190611328565b60405180910390f35b610212600480360381019061020d91906111db565b610850565b005b61022e60048036038101906102299190611204565b610910565b005b610238610a3b565b6040516102459190611328565b60405180910390f35b610256610a61565b005b610272600480360381019061026d91906111db565b610bbd565b005b61027c610d69565b73ffffffffffffffffffffffffffffffffffffffff1661029a610826565b73ffffffffffffffffffffffffffffffffffffffff16146102f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e79061139e565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561041657610549565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d032de86040518163ffffffff1660e01b815260040160206040518083038186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b89190611240565b9050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd6473f826040518263ffffffff1660e01b81526004016105159190611343565b600060405180830381600087803b15801561052f57600080fd5b505af1158015610543573d6000803e3d6000fd5b50505050505b565b610553610d69565b73ffffffffffffffffffffffffffffffffffffffff16610571610826565b73ffffffffffffffffffffffffffffffffffffffff16146105c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105be9061139e565b60405180910390fd5b8060688190555050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60695481565b610605610d69565b73ffffffffffffffffffffffffffffffffffffffff16610623610826565b73ffffffffffffffffffffffffffffffffffffffff1614610679576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106709061139e565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106c5610d69565b73ffffffffffffffffffffffffffffffffffffffff166106e3610826565b73ffffffffffffffffffffffffffffffffffffffff1614610739576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107309061139e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60685481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610858610d69565b73ffffffffffffffffffffffffffffffffffffffff16610876610826565b73ffffffffffffffffffffffffffffffffffffffff16146108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c39061139e565b60405180910390fd5b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019054906101000a900460ff1680610936575060008054906101000a900460ff16155b610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c9061137e565b60405180910390fd5b60008060019054906101000a900460ff1615905080156109c5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6109cd610d71565b82606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816068819055508015610a365760008060016101000a81548160ff0219169083151502179055505b505050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae5577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cfb0b4c6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b899190611240565b9050610b9481610e5a565b606854606954610ba491906113ea565b431015610bb15750610bbb565b610bb9610334565b505b565b610bc5610d69565b73ffffffffffffffffffffffffffffffffffffffff16610be3610826565b73ffffffffffffffffffffffffffffffffffffffff1614610c39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c309061139e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ca9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca09061135e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600060019054906101000a900460ff1680610d97575060008054906101000a900460ff16155b610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd9061137e565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e26576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610e2e610f41565b610e3661101a565b8015610e575760008060016101000a81548160ff0219169083151502179055505b50565b600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f3e57606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343ed751d826040518263ffffffff1660e01b8152600401610f0b9190611343565b600060405180830381600087803b158015610f2557600080fd5b505af1158015610f39573d6000803e3d6000fd5b505050505b50565b600060019054906101000a900460ff1680610f67575060008054906101000a900460ff16155b610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d9061137e565b60405180910390fd5b60008060019054906101000a900460ff161590508015610ff6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156110175760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611040575060008054906101000a900460ff16155b61107f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110769061137e565b60405180910390fd5b60008060019054906101000a900460ff1615905080156110cf576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60006110d9610d69565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080156111995760008060016101000a81548160ff0219169083151502179055505b50565b6000813590506111ab8161157c565b92915050565b6000815190506111c081611593565b92915050565b6000813590506111d5816115aa565b92915050565b6000602082840312156111ed57600080fd5b60006111fb8482850161119c565b91505092915050565b6000806040838503121561121757600080fd5b60006112258582860161119c565b9250506020611236858286016111c6565b9150509250929050565b60006020828403121561125257600080fd5b6000611260848285016111b1565b91505092915050565b60006020828403121561127b57600080fd5b6000611289848285016111c6565b91505092915050565b61129b81611440565b82525050565b6112aa81611452565b82525050565b60006112bd6026836113d9565b91506112c8826114b5565b604082019050919050565b60006112e0602e836113d9565b91506112eb82611504565b604082019050919050565b60006113036020836113d9565b915061130e82611553565b602082019050919050565b6113228161147c565b82525050565b600060208201905061133d6000830184611292565b92915050565b600060208201905061135860008301846112a1565b92915050565b60006020820190508181036000830152611377816112b0565b9050919050565b60006020820190508181036000830152611397816112d3565b9050919050565b600060208201905081810360008301526113b7816112f6565b9050919050565b60006020820190506113d36000830184611319565b92915050565b600082825260208201905092915050565b60006113f58261147c565b91506114008361147c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561143557611434611486565b5b828201905092915050565b600061144b8261145c565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61158581611440565b811461159057600080fd5b50565b61159c81611452565b81146115a757600080fd5b50565b6115b38161147c565b81146115be57600080fd5b5056fea26469706673582212208a5fced2ed86d8df8ad37a726eea6c9778728cc67394a20c173c6c63bf3be4bd64736f6c63430008040033";

export class VerificationRootRelayer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _versionVerificationManager: string,
    _blocksPerRootRelay: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerificationRootRelayer> {
    return super.deploy(
      _versionVerificationManager,
      _blocksPerRootRelay,
      overrides || {}
    ) as Promise<VerificationRootRelayer>;
  }
  getDeployTransaction(
    _versionVerificationManager: string,
    _blocksPerRootRelay: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _versionVerificationManager,
      _blocksPerRootRelay,
      overrides || {}
    );
  }
  attach(address: string): VerificationRootRelayer {
    return super.attach(address) as VerificationRootRelayer;
  }
  connect(signer: Signer): VerificationRootRelayer__factory {
    return super.connect(signer) as VerificationRootRelayer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerificationRootRelayerInterface {
    return new utils.Interface(_abi) as VerificationRootRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerificationRootRelayer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VerificationRootRelayer;
  }
}
